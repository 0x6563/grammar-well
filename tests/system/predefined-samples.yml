General:
  - title: Nullable Whitespace Bug
    grammarSource: grammars/whitespace.gwell
    input: "(x)"
    result: [[["(", null, [[[["x"]]]], null, ")"]]]

Parentheses:
  - title: Parentheses Pass 1
    grammarSource: grammars/parentheses.gwell
    input: "()"
    result: true

  - title: Parentheses Pass 2
    grammarSource: grammars/parentheses.gwell
    input: "[(){}<>]"
    result: true

  - title: Parentheses Pass 3
    grammarSource: grammars/parentheses.gwell
    input: "[(((<>)()({})())(()())(())[])]"
    result: true

  - title: Parentheses Pass 4
    grammarSource: grammars/parentheses.gwell
    input: "<<[([])]>([(<>[]{}{}<>())[{}[][]{}{}[]<>[]{}<>{}<>[]<>{}()][[][][]()()()]({})<[]>{(){}()<>}(<>[])]())({})>"
    result: true

  - title: Parentheses Fail 1
    grammarSource: grammars/parentheses.gwell
    input: " "
    throw: true

  - title: Parentheses Fail 2
    grammarSource: grammars/parentheses.gwell
    input: "[}"
    throw: true

  - title: Parentheses Fail 3
    grammarSource: grammars/parentheses.gwell
    input: "[(){}><]"
    throw: true

  - title: Parentheses Fail 4
    grammarSource: grammars/parentheses.gwell
    input: "(((())))(()))"
    throw: true

  - title: Parentheses Not Fail 1
    grammarSource: grammars/parentheses.gwell
    input: ""
    throw: false

  - title: Parentheses Not Fail 2
    grammarSource: grammars/parentheses.gwell
    input: "((((())))(())()"
    throw: false

Tosh:
  - title: Tosh 1 Pass
    grammarSource: grammars/tosh.gwell
    input: "set foo to 2 * e^ of ( foo * -0.05 + 0.5) * (1 - e ^ of (foo * -0.05 + 0.5))"
    result:
      [
        "setVar:to:",
        "foo",
        [
          "*",
          [
            "*",
            2,
            [
              "computeFunction:of:",
              "e ^",
              ["+", ["*", ["readVariable", "foo"], -0.05], 0.5],
            ],
          ],
          [
            "-",
            1,
            [
              "computeFunction:of:",
              "e ^",
              ["+", ["*", ["readVariable", "foo"], -0.05], 0.5],
            ],
          ],
        ],
      ]

JSON:
  - title: JSON 1
    grammarSource: grammars/json.gwell
    inputSource: json1.json
    resultJSON: json1.json

  - title: JSON 
    grammarSource: grammars/json.gwell
    inputSource: json2.json
    resultJSON: json2.json

CYK:
  - title: CYK
    algorithm: cyk
    grammarSource: grammars/cyk.gwell
    input: ABC
    result: [A, [B, C]]
LR:
  - title: LR
    algorithm: lr0
    grammarSource: grammars/lr.gwell
    input: abab
    result: [[[a, b], [a, b]]]
