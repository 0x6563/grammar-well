grammar {

	[line]
		| thing => ( $0 )

	[thing]
		| block => ( $0 )
		| r_parens => ( $0 )
		| b_parens => ( $0 )

	[n]
		| n4 => ( $0 )

	[sb]
		| join => ( $0 )
		| n4 => ( $0 )
		| s0 => ( $0 )

	[b]
		| b8 => ( $0 )

	[c]
		| r_parens => ( $0 )
		| c0 => ( $0 )

	[r_parens]
		| "(" _ r_value _ ")" => ${  ({data}) => data[2]  }

	[r_value]
		| join => ( $0 )
		| n4 => ( $0 )

	[b_parens]
		| "<" _ b8 _ ">" => ${  ({data}) => data[2]  }

	[predicate]
		| simple_predicate => ( $0 )

	[join]
		| "join" __ jpart __ jpart => ${  ({data}) => ["concatenate:with:", data[2], data[4]]  }

	[jpart]
		| s0 => ( $0 )
		| "_" => ( "" )
		| join => ( $0 )
		| r_parens => ( $0 )
		| b_parens => ( $0 )

	[predicate]
		| "touching" __ "color" __ c _ "?" => ${  ({data}) => ["touchingColor:", data[4]]  }
		| "color" __ c __ "is" __ "touching" __ c _ "?" => ${  ({data}) => ["color:sees:", data[2], data[8]]  }

	[b8]
		| b_and => ( $0 )
		| b_or => ( $0 )
		| b7 => ( $0 )

	[b_and]
		| b_and __ "and" __ b7 => ${  ({data}) => ["&", data[0], data[4]]  }
		| b7 __ "and" __ b7 => ${  ({data}) => ["&", data[0], data[4]]  }

	[b_or]
		| b_or __ "or" __ b7 => ${  ({data}) => ["|", data[0], data[4]]  }
		| b7 __ "or" __ b7 => ${  ({data}) => ["|", data[0], data[4]]  }

	[b7]
		| "not" __ b7 => ${  ({data}) => ["not", data[2]]  }
		| b6 => ( $0 )

	[b6]
		| sb _ "<" _ sb => ${  ({data}) => ["<", data[0], data[4]]  }
		| sb _ ">" _ sb => ${  ({data}) => [">", data[0], data[4]]  }
		| sb _ "=" _ sb => ${  ({data}) => ["=", data[0], data[4]]  }
		| m_list __ "contains" __ sb _ "?" => ${  ({data}) => ["list:contains:", data[0], data[4]]  }
		| predicate => ( $0 )
		| b2 => ( $0 )

	[b2]
		| b_parens => ( $0 )
		| b0 => ( $0 )

	[n4]
		| n4 _ "+" _ n3 => ${  ({data}) => ["+", data[0], data[4]]  }
		| n4 _ "-" _ n3 => ${  ({data}) => ["-", data[0], data[4]]  }
		| n3 => ( $0 )

	[n3]
		| n3 _ "*" _ n2 => ${  ({data}) => ["*", data[0], data[4]]  }
		| n3 _ "/" _ n2 => ${  ({data}) => ["/", data[0], data[4]]  }
		| n3 _ "mod" _ n2 => ${  ({data}) => ["%", data[0], data[4]]  }
		| n2 => ( $0 )

	[n2]
		| "round" __ n2 => ${  ({data}) => ["rounded", data[2]]  }
		| m_mathOp __ "of" __ n2 => ${  ({data}) => ["computeFunction:of:", data[0], data[4]]  }
		| "pick" __ "random" __ n4 __ "to" __ n2 => ${  ({data}) => ["randomFrom:to:", data[4], data[8]]  }
		| m_attribute __ "of" __ m_spriteOrStage => ${  ({data}) => ["getAttribute:of:", data[0], data[4]]  }
		| "distance" __ "to" __ m_spriteOrMouse => ${  ({data}) => ["distanceTo:", data[4]]  }
		| "length" __ "of" __ s2 => ${  ({data}) => ["stringLength:", data[4]]  }
		| "letter" __ n __ "of" __ s2 => ${  ({data}) => ["letter:of:", data[2], data[6]]  }
		| n1 => ( $0 )

	[n1]
		| simple_reporter => ( $0 )
		| r_parens => ( $0 )
		| b_parens => ( $0 )
		| n0 => ( $0 )

	[s2]
		| s0 => ( $0 )
		| n1 => ( $0 )

	[n0]
		| "-" _ number => ${  ({data}) => -data[2]  }
		| number => ${  ({data}) => data[0]  }
		| "_" => ${  ({data}) => 0  }

	[s0]
		| string => ( $0 )

	[b0]
		| "<>" => ${  ({data}) => false  }

	[c0]
		| color => ( $0 )

	[_greenFlag]
		| "flag"
		| "green" __ "flag"

	[_turnLeft]
		| "ccw"
		| "left"

	[_turnRight]
		| "cw"
		| "right"

	[c0]
		| "red" => ( $0 )
		| "orange" => ( $0 )
		| "yellow" => ( $0 )
		| "green" => ( $0 )
		| "blue" => ( $0 )
		| "purple" => ( $0 )
		| "black" => ( $0 )
		| "white" => ( $0 )
		| "pink" => ( $0 )
		| "brown" => ( $0 )

	[m_attribute]
		| "x" __ "position" => ( "x position" )
		| "y" __ "position" => ( "y position" )
		| "direction" => ( $0 )
		| "costume" __ "#" => ( "costume #" )
		| "costume" __ "name" => ( "costume name" )
		| "backdrop" __ "#" => ( "backdrop #" )
		| "backdrop" __ "name" => ( "backdrop name" )
		| "size" => ( $0 )
		| "volume" => ( $0 )
		| "_" => ( "" )

	[m_backdrop]
		| jpart => ( $0 )
		| "_" => ( "" )

	[m_broadcast]
		| jpart => ( $0 )
		| "_" => ( "" )

	[m_costume]
		| jpart => ( $0 )
		| "_" => ( "" )

	[m_effect]
		| "color" => ( $0 )
		| "fisheye" => ( $0 )
		| "whirl" => ( $0 )
		| "pixelate" => ( $0 )
		| "mosaic" => ( $0 )
		| "brightness" => ( $0 )
		| "ghost" => ( $0 )
		| "_" => ( "" )

	[m_key]
		| "space" => ( $0 )
		| "up" __ "arrow" => ( "up arrow" )
		| "down" __ "arrow" => ( "down arrow" )
		| "right" __ "arrow" => ( "right arrow" )
		| "left" __ "arrow" => ( "left arrow" )
		| "any" => ( $0 )
		| r:{[a-z0-9]} => ( $0 )
		| "_" => ( "" )

	[m_list]
		| ListName => ( $0 )
		| "_" => ( "" )

	[m_location]
		| jpart => ( $0 )
		| "mouse-pointer" => ( "_mouse_" )
		| "random" __ "position" => ( "_random_" )
		| "_" => ( "" )

	[m_mathOp]
		| "abs" => ( $0 )
		| "floor" => ( $0 )
		| "ceiling" => ( $0 )
		| "sqrt" => ( $0 )
		| "sin" => ( $0 )
		| "cos" => ( $0 )
		| "tan" => ( $0 )
		| "asin" => ( $0 )
		| "acos" => ( $0 )
		| "atan" => ( $0 )
		| "ln" => ( $0 )
		| "log" => ( $0 )
		| "e" _ "^" => ( "e ^" )
		| "10" _ "^" => ( "10 ^" )
		| "_" => ( "" )

	[m_rotationStyle]
		| "left-right" => ( $0 )
		| "don't" __ "rotate" => ( "don't rotate" )
		| "all" __ "around" => ( "all around" )
		| "_" => ( "" )

	[m_scene]
		| jpart => ( $0 )
		| "_" => ( "" )

	[m_sound]
		| jpart => ( $0 )
		| "_" => ( "" )

	[m_spriteOnly]
		| jpart => ( $0 )
		| "myself" => ( "_myself_" )
		| "_" => ( "" )

	[m_spriteOrMouse]
		| jpart => ( $0 )
		| "mouse-pointer" => ( "_mouse_" )
		| "_" => ( "" )

	[m_spriteOrStage]
		| jpart => ( $0 )
		| "Stage" => ( "_stage_" )
		| "_" => ( "" )

	[m_stageOrThis]
		| "Stage" => ( "_stage_" )
		| "this" __ "sprite" => ( "this sprite" )
		| "_" => ( "" )

	[m_stop]
		| "all" => ( $0 )
		| "this" __ "script" => ( "this script" )
		| "other" __ "scripts" __ "in" __ "sprite" => ( "other scripts in sprite" )
		| "_" => ( "" )

	[m_timeAndDate]
		| "year" => ( $0 )
		| "month" => ( $0 )
		| "date" => ( $0 )
		| "day" __ "of" __ "week" => ( "day of week" )
		| "hour" => ( $0 )
		| "minute" => ( $0 )
		| "second" => ( $0 )
		| "_" => ( "" )

	[m_touching]
		| jpart => ( $0 )
		| "mouse-pointer" => ( "_mouse_" )
		| "edge" => ( "_edge_" )
		| "_" => ( "" )

	[m_triggerSensor]
		| "loudness" => ( $0 )
		| "timer" => ( $0 )
		| "video" __ "motion" => ( "video motion" )
		| "_" => ( "" )

	[m_var]
		| VariableName => ( $0 )
		| "_" => ( "" )

	[m_varName]
		| VariableName => ( $0 )
		| "_" => ( "" )

	[m_videoMotionType]
		| "motion" => ( $0 )
		| "direction" => ( $0 )
		| "_" => ( "" )

	[m_videoState]
		| "off" => ( $0 )
		| "on" => ( $0 )
		| "on-flipped" => ( $0 )
		| "_" => ( "" )

	[d_direction]
		| n => ( $0 )

	[d_drum]
		| n => ( $0 )

	[d_instrument]
		| n => ( $0 )

	[d_listDeleteItem]
		| "last" => ( $0 )
		| "all" => ( $0 )
		| n => ( $0 )

	[d_listItem]
		| "last" => ( $0 )
		| "random" => ( $0 )
		| n => ( $0 )

	[d_note]
		| n => ( $0 )

	[m_attribute]
		| jpart => ( $0 )

	[block]
		| "move" __ n __ "steps" => ${  ({data}) => ["forward:", data[2]]  }
		| "turn" __ _turnRight __ n __ "degrees" => ${  ({data}) => ["turnRight:", data[2], data[4]]  }
		| "turn" __ _turnLeft __ n __ "degrees" => ${  ({data}) => ["turnLeft:", data[2], data[4]]  }
		| "point" __ "in" __ "direction" __ d_direction => ${  ({data}) => ["heading:", data[6]]  }
		| "point" __ "towards" __ m_spriteOrMouse => ${  ({data}) => ["pointTowards:", data[4]]  }
		| "go" __ "to" __ "x:" __ n __ "y:" __ n => ${  ({data}) => ["gotoX:y:", data[6], data[10]]  }
		| "go" __ "to" __ m_location => ${  ({data}) => ["gotoSpriteOrMouse:", data[4]]  }
		| "glide" __ n __ "secs" __ "to" __ "x:" __ n __ "y:" __ n => ${  ({data}) => ["glideSecs:toX:y:elapsed:from:", data[2], data[10], data[14]]  }
		| "change" __ "x" __ "by" __ n => ${  ({data}) => ["changeXposBy:", data[6]]  }
		| "set" __ "x" __ "to" __ n => ${  ({data}) => ["xpos:", data[6]]  }
		| "change" __ "y" __ "by" __ n => ${  ({data}) => ["changeYposBy:", data[6]]  }
		| "set" __ "y" __ "to" __ n => ${  ({data}) => ["ypos:", data[6]]  }
		| "set" __ "rotation" __ "style" __ m_rotationStyle => ${  ({data}) => ["setRotationStyle", data[6]]  }
		| "say" __ sb __ "for" __ n __ "secs" => ${  ({data}) => ["say:duration:elapsed:from:", data[2], data[6]]  }
		| "say" __ sb => ${  ({data}) => ["say:", data[2]]  }
		| "think" __ sb __ "for" __ n __ "secs" => ${  ({data}) => ["think:duration:elapsed:from:", data[2], data[6]]  }
		| "think" __ sb => ${  ({data}) => ["think:", data[2]]  }
		| "show" => ${  ({data}) => ["show"]  }
		| "hide" => ${  ({data}) => ["hide"]  }
		| "switch" __ "costume" __ "to" __ m_costume => ${  ({data}) => ["lookLike:", data[6]]  }
		| "next" __ "costume" => ${  ({data}) => ["nextCostume"]  }
		| "next" __ "backdrop" => ${  ({data}) => ["nextScene"]  }
		| "switch" __ "backdrop" __ "to" __ m_backdrop => ${  ({data}) => ["startScene", data[6]]  }
		| "switch" __ "backdrop" __ "to" __ m_backdrop __ "and" __ "wait" => ${  ({data}) => ["startSceneAndWait", data[6]]  }
		| "change" __ m_effect __ "effect" __ "by" __ n => ${  ({data}) => ["changeGraphicEffect:by:", data[2], data[8]]  }
		| "set" __ m_effect __ "effect" __ "to" __ n => ${  ({data}) => ["setGraphicEffect:to:", data[2], data[8]]  }
		| "clear" __ "graphic" __ "effects" => ${  ({data}) => ["filterReset"]  }
		| "change" __ "size" __ "by" __ n => ${  ({data}) => ["changeSizeBy:", data[6]]  }
		| "set" __ "size" __ "to" __ n __ "%" => ${  ({data}) => ["setSizeTo:", data[6]]  }
		| "go" __ "to" __ "front" => ${  ({data}) => ["comeToFront"]  }
		| "go" __ "back" __ n __ "layers" => ${  ({data}) => ["goBackByLayers:", data[4]]  }
		| "play" __ "sound" __ m_sound => ${  ({data}) => ["playSound:", data[4]]  }
		| "play" __ "sound" __ m_sound __ "until" __ "done" => ${  ({data}) => ["doPlaySoundAndWait", data[4]]  }
		| "stop" __ "all" __ "sounds" => ${  ({data}) => ["stopAllSounds"]  }
		| "play" __ "drum" __ d_drum __ "for" __ n __ "beats" => ${  ({data}) => ["playDrum", data[4], data[8]]  }
		| "rest" __ "for" __ n __ "beats" => ${  ({data}) => ["rest:elapsed:from:", data[4]]  }
		| "play" __ "note" __ d_note __ "for" __ n __ "beats" => ${  ({data}) => ["noteOn:duration:elapsed:from:", data[4], data[8]]  }
		| "set" __ "instrument" __ "to" __ d_instrument => ${  ({data}) => ["instrument:", data[6]]  }
		| "change" __ "volume" __ "by" __ n => ${  ({data}) => ["changeVolumeBy:", data[6]]  }
		| "set" __ "volume" __ "to" __ n __ "%" => ${  ({data}) => ["setVolumeTo:", data[6]]  }
		| "change" __ "tempo" __ "by" __ n => ${  ({data}) => ["changeTempoBy:", data[6]]  }
		| "set" __ "tempo" __ "to" __ n __ "bpm" => ${  ({data}) => ["setTempoTo:", data[6]]  }
		| "clear" => ${  ({data}) => ["clearPenTrails"]  }
		| "stamp" => ${  ({data}) => ["stampCostume"]  }
		| "pen" __ "down" => ${  ({data}) => ["putPenDown"]  }
		| "pen" __ "up" => ${  ({data}) => ["putPenUp"]  }
		| "set" __ "pen" __ "color" __ "to" __ c => ${  ({data}) => ["penColor:", data[8]]  }
		| "change" __ "pen" __ "hue" __ "by" __ n => ${  ({data}) => ["changePenHueBy:", data[8]]  }
		| "set" __ "pen" __ "hue" __ "to" __ n => ${  ({data}) => ["setPenHueTo:", data[8]]  }
		| "change" __ "pen" __ "shade" __ "by" __ n => ${  ({data}) => ["changePenShadeBy:", data[8]]  }
		| "set" __ "pen" __ "shade" __ "to" __ n => ${  ({data}) => ["setPenShadeTo:", data[8]]  }
		| "change" __ "pen" __ "size" __ "by" __ n => ${  ({data}) => ["changePenSizeBy:", data[8]]  }
		| "set" __ "pen" __ "size" __ "to" __ n => ${  ({data}) => ["penSize:", data[8]]  }
		| "when" __ _greenFlag __ "clicked" => ${  ({data}) => ["whenGreenFlag", data[2]]  }
		| "when" __ m_key __ "key" __ "pressed" => ${  ({data}) => ["whenKeyPressed", data[2]]  }
		| "when" __ "this" __ "sprite" __ "clicked" => ${  ({data}) => ["whenClicked"]  }
		| "when" __ "backdrop" __ "switches" __ "to" __ m_backdrop => ${  ({data}) => ["whenSceneStarts", data[8]]  }
		| "when" __ m_triggerSensor __ ">" __ n => ${  ({data}) => ["whenSensorGreaterThan", data[2], data[6]]  }
		| "when" __ "I" __ "receive" __ m_broadcast => ${  ({data}) => ["whenIReceive", data[6]]  }
		| "broadcast" __ m_broadcast => ${  ({data}) => ["broadcast:", data[2]]  }
		| "broadcast" __ m_broadcast __ "and" __ "wait" => ${  ({data}) => ["doBroadcastAndWait", data[2]]  }
		| "wait" __ n __ "secs" => ${  ({data}) => ["wait:elapsed:from:", data[2]]  }
		| "repeat" __ n => ${  ({data}) => ["doRepeat", data[2]]  }
		| "forever" => ${  ({data}) => ["doForever"]  }
		| "if" __ b __ "then" => ${  ({data}) => ["doIfElse", data[2]]  }
		| "wait" __ "until" __ b => ${  ({data}) => ["doWaitUntil", data[4]]  }
		| "repeat" __ "until" __ b => ${  ({data}) => ["doUntil", data[4]]  }
		| "stop" __ m_stop => ${  ({data}) => ["stopScripts", data[2]]  }
		| "when" __ "I" __ "start" __ "as" __ "a" __ "clone" => ${  ({data}) => ["whenCloned"]  }
		| "create" __ "clone" __ "of" __ m_spriteOnly => ${  ({data}) => ["createCloneOf", data[6]]  }
		| "delete" __ "this" __ "clone" => ${  ({data}) => ["deleteClone"]  }
		| "ask" __ sb __ "and" __ "wait" => ${  ({data}) => ["doAsk", data[2]]  }
		| "turn" __ "video" __ m_videoState => ${  ({data}) => ["setVideoState", data[4]]  }
		| "set" __ "video" __ "transparency" __ "to" __ n __ "%" => ${  ({data}) => ["setVideoTransparency", data[8]]  }
		| "reset" __ "timer" => ${  ({data}) => ["timerReset"]  }
		| "set" __ m_var __ "to" __ sb => ${  ({data}) => ["setVar:to:", data[2], data[6]]  }
		| "change" __ m_var __ "by" __ n => ${  ({data}) => ["changeVar:by:", data[2], data[6]]  }
		| "show" __ "variable" __ m_var => ${  ({data}) => ["showVariable:", data[4]]  }
		| "hide" __ "variable" __ m_var => ${  ({data}) => ["hideVariable:", data[4]]  }
		| "add" __ sb __ "to" __ m_list => ${  ({data}) => ["append:toList:", data[2], data[6]]  }
		| "delete" __ d_listDeleteItem __ "of" __ m_list => ${  ({data}) => ["deleteLine:ofList:", data[2], data[6]]  }
		| "if" __ "on" __ "edge," __ "bounce" => ${  ({data}) => ["bounceOffEdge"]  }
		| "insert" __ sb __ "at" __ d_listItem __ "of" __ m_list => ${  ({data}) => ["insert:at:ofList:", data[2], data[6], data[10]]  }
		| "replace" __ "item" __ d_listItem __ "of" __ m_list __ "with" __ sb => ${  ({data}) => ["setLine:ofList:to:", data[4], data[8], data[12]]  }
		| "show" __ "list" __ m_list => ${  ({data}) => ["showList:", data[4]]  }
		| "hide" __ "list" __ m_list => ${  ({data}) => ["hideList:", data[4]]  }

	[simple_reporter]
		| "x" __ "position" => ${  ({data}) => ["xpos"]  }
		| "y" __ "position" => ${  ({data}) => ["ypos"]  }
		| "direction" => ${  ({data}) => ["heading"]  }
		| "costume" __ "#" => ${  ({data}) => ["costumeIndex"]  }
		| "size" => ${  ({data}) => ["scale"]  }
		| "backdrop" __ "name" => ${  ({data}) => ["sceneName"]  }
		| "backdrop" __ "#" => ${  ({data}) => ["backgroundIndex"]  }
		| "volume" => ${  ({data}) => ["volume"]  }
		| "tempo" => ${  ({data}) => ["tempo"]  }

	[simple_predicate]
		| "touching" __ m_touching _ "?" => ${  ({data}) => ["touching:", data[2]]  }

	[simple_reporter]
		| "answer" => ${  ({data}) => ["answer"]  }

	[simple_predicate]
		| "key" __ m_key __ "pressed" _ "?" => ${  ({data}) => ["keyPressed:", data[2]]  }
		| "mouse" __ "down" _ "?" => ${  ({data}) => ["mousePressed"]  }

	[simple_reporter]
		| "mouse" __ "x" => ${  ({data}) => ["mouseX"]  }
		| "mouse" __ "y" => ${  ({data}) => ["mouseY"]  }
		| "loudness" => ${  ({data}) => ["soundLevel"]  }
		| "video" __ m_videoMotionType __ "on" __ m_stageOrThis => ${  ({data}) => ["senseVideoMotion", data[2], data[6]]  }
		| "timer" => ${  ({data}) => ["timer"]  }
		| "current" __ m_timeAndDate => ${  ({data}) => ["timeAndDate", data[2]]  }
		| "days" __ "since" __ number => ${  ({data}) => ["timestamp", data[4]]  }
		| "username" => ${  ({data}) => ["getUserName"]  }
		| "item" __ d_listItem __ "of" __ m_list => ${  ({data}) => ["getLine:ofList:", data[2], data[6]]  }
		| "length" __ "of" __ m_list => ${  ({data}) => ["lineCountOfList:", data[4]]  }

	[simple_reporter]
		| VariableName => ${  ({data}) => ['readVariable', data[0]]  }

	[block]
		| "else" => ${  ({data}) => ["else"]  }
		| "end" => ${  ({data}) => ["end"]  }
		| "..." => ${  ({data}) => ["ellips"]  }

	[_]
		| r:{[ ]}* => ${  ({data}) => null  }

	[__]
		| r:{[ ]}+ => ${  ({data}) => null  }

	[string]
		| "'hello'" => ${  ({data}) => 'hello'  }

	[number]
		| digits => ${  ({data}) => parseInt(data[0])  }

	[number]
		| digits r:{[.]} digits => ${  ({data}) => parseFloat(data[0] + '.' + data[2])  }

	[digits]
		| r:{[0-9]}+ => ${  ({data}) =>  data[0].map(v=>v.value).join('')  }

	[color]
		| r:{[#]} r:{[0-9a-z]} r:{[0-9a-z]} r:{[0-9a-z]} r:{[0-9a-z]} r:{[0-9a-z]} r:{[0-9a-z]}
		| r:{[#]} r:{[0-9a-z]} r:{[0-9a-z]} r:{[0-9a-z]}

	[VariableName]
		| "foo" => ( "foo" )

	[ListName]
		| "list" => ( "list" )

}
