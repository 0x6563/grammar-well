{ "state": { "grammar": { "start": "unsigned_int", "rules": [{ "name": "unsigned_int$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "unsigned_int$RPT1Nx1", "symbols": [{ "rule": "unsigned_int$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "unsigned_int", "symbols": [{ "rule": "unsigned_int$RPT1Nx1" }], "postprocess": "({data}) => { return parseInt(data[0].join(\"\")); }" }, { "name": "int$RPT01x1$SUBx1", "symbols": [{ "literal": "-" }] }, { "name": "int$RPT01x1$SUBx1", "symbols": [{ "literal": "+" }] }, { "name": "int$RPT01x1", "symbols": [{ "rule": "int$RPT01x1$SUBx1" }], "postprocess": { "builtin": "first" } }, { "name": "int$RPT01x1", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "int$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "int$RPT1Nx1", "symbols": [{ "rule": "int$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "int", "symbols": [{ "rule": "int$RPT01x1" }, { "rule": "int$RPT1Nx1" }], "postprocess": "({data}) => { return data[0] ? parseInt(data[0][0]+data[1].join(\"\")) : parseInt(data[1].join(\"\")); }" }, { "name": "unsigned_decimal$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "unsigned_decimal$RPT1Nx1", "symbols": [{ "rule": "unsigned_decimal$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "unsigned_decimal$RPT01x1$SUBx1$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "unsigned_decimal$RPT01x1$SUBx1$RPT1Nx1", "symbols": [{ "rule": "unsigned_decimal$RPT01x1$SUBx1$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "unsigned_decimal$RPT01x1$SUBx1", "symbols": [{ "literal": "." }, { "rule": "unsigned_decimal$RPT01x1$SUBx1$RPT1Nx1" }] }, { "name": "unsigned_decimal$RPT01x1", "symbols": [{ "rule": "unsigned_decimal$RPT01x1$SUBx1" }], "postprocess": { "builtin": "first" } }, { "name": "unsigned_decimal$RPT01x1", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "unsigned_decimal", "symbols": [{ "rule": "unsigned_decimal$RPT1Nx1" }, { "rule": "unsigned_decimal$RPT01x1" }], "postprocess": "({data}) => { return parseFloat(data[0].join(\"\") + (data[1] ? \".\"+data[1][1].join(\"\") : \"\")); }" }, { "name": "decimal$RPT01x1", "symbols": [{ "literal": "-" }], "postprocess": { "builtin": "first" } }, { "name": "decimal$RPT01x1", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "decimal$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "decimal$RPT1Nx1", "symbols": [{ "rule": "decimal$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "decimal$RPT01x2$SUBx1$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "decimal$RPT01x2$SUBx1$RPT1Nx1", "symbols": [{ "rule": "decimal$RPT01x2$SUBx1$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "decimal$RPT01x2$SUBx1", "symbols": [{ "literal": "." }, { "rule": "decimal$RPT01x2$SUBx1$RPT1Nx1" }] }, { "name": "decimal$RPT01x2", "symbols": [{ "rule": "decimal$RPT01x2$SUBx1" }], "postprocess": { "builtin": "first" } }, { "name": "decimal$RPT01x2", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "decimal", "symbols": [{ "rule": "decimal$RPT01x1" }, { "rule": "decimal$RPT1Nx1" }, { "rule": "decimal$RPT01x2" }], "postprocess": "({data}) => { return parseFloat( (data[0] || \"\") + data[1].join(\"\") +(data[2] ? \".\"+data[2][1].join(\"\") : \"\")); }" }, { "name": "percentage", "symbols": [{ "rule": "decimal" }, { "literal": "%" }], "postprocess": "({data}) => { return data[0]/100; }" }, { "name": "jsonfloat$RPT01x1", "symbols": [{ "literal": "-" }], "postprocess": { "builtin": "first" } }, { "name": "jsonfloat$RPT01x1", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "jsonfloat$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "jsonfloat$RPT1Nx1", "symbols": [{ "rule": "jsonfloat$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "jsonfloat$RPT01x2$SUBx1$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "jsonfloat$RPT01x2$SUBx1$RPT1Nx1", "symbols": [{ "rule": "jsonfloat$RPT01x2$SUBx1$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "jsonfloat$RPT01x2$SUBx1", "symbols": [{ "literal": "." }, { "rule": "jsonfloat$RPT01x2$SUBx1$RPT1Nx1" }] }, { "name": "jsonfloat$RPT01x2", "symbols": [{ "rule": "jsonfloat$RPT01x2$SUBx1" }], "postprocess": { "builtin": "first" } }, { "name": "jsonfloat$RPT01x2", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "jsonfloat$RPT01x3$SUBx1$RPT01x1", "symbols": [{ "regex": "[+-]" }], "postprocess": { "builtin": "first" } }, { "name": "jsonfloat$RPT01x3$SUBx1$RPT01x1", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "jsonfloat$RPT01x3$SUBx1$RPT1Nx1", "symbols": [{ "regex": "[0-9]" }] }, { "name": "jsonfloat$RPT01x3$SUBx1$RPT1Nx1", "symbols": [{ "rule": "jsonfloat$RPT01x3$SUBx1$RPT1Nx1" }, { "regex": "[0-9]" }], "postprocess": { "builtin": "concat" } }, { "name": "jsonfloat$RPT01x3$SUBx1", "symbols": [{ "regex": "[eE]" }, { "rule": "jsonfloat$RPT01x3$SUBx1$RPT01x1" }, { "rule": "jsonfloat$RPT01x3$SUBx1$RPT1Nx1" }] }, { "name": "jsonfloat$RPT01x3", "symbols": [{ "rule": "jsonfloat$RPT01x3$SUBx1" }], "postprocess": { "builtin": "first" } }, { "name": "jsonfloat$RPT01x3", "symbols": [], "postprocess": { "builtin": "null" } }, { "name": "jsonfloat", "symbols": [{ "rule": "jsonfloat$RPT01x1" }, { "rule": "jsonfloat$RPT1Nx1" }, { "rule": "jsonfloat$RPT01x2" }, { "rule": "jsonfloat$RPT01x3" }], "postprocess": "({data}) => { return parseFloat( (data[0] || \"\") + data[1].join(\"\") + (data[2] ? \".\"+data[2][1].join(\"\") : \"\") + (data[3] ? \"e\" + (data[3][1] || \"+\") + data[3][2].join(\"\") : \"\")); }" }], "names": {} }, "lexer": null, "head": [], "body": [], "config": {}, "version": "unknown" }, "exportName": "GWLanguage" }
