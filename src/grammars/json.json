{"state":{"grammar":{"start":"json","rules":{"json$SUBx1":[{"name":"json$SUBx1","symbols":[{"rule":"object"}]},{"name":"json$SUBx1","symbols":[{"rule":"array"}]}],"json":[{"name":"json","symbols":[{"rule":"_"},{"rule":"json$SUBx1"},{"rule":"_"}],"postprocess":{"template":"$1[0]"}}],"object":[{"name":"object","symbols":[{"literal":"{","insensitive":false},{"rule":"_"},{"literal":"}","insensitive":false}],"postprocess":{"template":"{}"}},{"name":"object","symbols":[{"literal":"{","insensitive":false},{"rule":"_"},{"rule":"pair"},{"rule":"object$RPT0Nx1"},{"rule":"_"},{"literal":"}","insensitive":false}],"postprocess":" extractObject "}],"object$RPT0Nx1":[{"name":"object$RPT0Nx1","symbols":[]},{"name":"object$RPT0Nx1","symbols":[{"rule":"object$RPT0Nx1"},{"rule":"object$RPT0Nx1$SUBx1"}],"postprocess":{"builtin":"concat"}}],"object$RPT0Nx1$SUBx1":[{"name":"object$RPT0Nx1$SUBx1","symbols":[{"rule":"_"},{"literal":",","insensitive":false},{"rule":"_"},{"rule":"pair"}]}],"array":[{"name":"array","symbols":[{"literal":"[","insensitive":false},{"rule":"_"},{"literal":"]","insensitive":false}],"postprocess":{"template":"[]"}},{"name":"array","symbols":[{"literal":"[","insensitive":false},{"rule":"_"},{"rule":"value"},{"rule":"array$RPT0Nx1"},{"rule":"_"},{"literal":"]","insensitive":false}],"postprocess":" extractArray "}],"array$RPT0Nx1":[{"name":"array$RPT0Nx1","symbols":[]},{"name":"array$RPT0Nx1","symbols":[{"rule":"array$RPT0Nx1"},{"rule":"array$RPT0Nx1$SUBx1"}],"postprocess":{"builtin":"concat"}}],"array$RPT0Nx1$SUBx1":[{"name":"array$RPT0Nx1$SUBx1","symbols":[{"rule":"_"},{"literal":",","insensitive":false},{"rule":"_"},{"rule":"value"}]}],"value":[{"name":"value","symbols":[{"rule":"object"}],"postprocess":{"template":"$0"}},{"name":"value","symbols":[{"rule":"array"}],"postprocess":{"template":"$0"}},{"name":"value","symbols":[{"rule":"number"}],"postprocess":{"template":"$0"}},{"name":"value","symbols":[{"rule":"string"}],"postprocess":{"template":"$0"}},{"name":"value","symbols":[{"literal":"true","insensitive":false}],"postprocess":{"template":"true"}},{"name":"value","symbols":[{"literal":"false","insensitive":false}],"postprocess":{"template":"false"}},{"name":"value","symbols":[{"literal":"null","insensitive":false}],"postprocess":{"template":"null"}}],"number":[{"name":"number","symbols":[{"token":"number"}],"postprocess":{"template":"parseFloat($0.value)"}}],"string":[{"name":"string","symbols":[{"token":"string"}],"postprocess":{"template":"JSON.parse($0.value)"}}],"pair":[{"name":"pair","symbols":[{"rule":"key"},{"rule":"_"},{"literal":":","insensitive":false},{"rule":"_"},{"rule":"value"}],"postprocess":{"template":"[$0, $4]"}}],"key":[{"name":"key","symbols":[{"rule":"string"}],"postprocess":{"template":"$0"}}],"_$RPT01x1":[{"name":"_$RPT01x1","symbols":[{"token":"space"}],"postprocess":{"builtin":"first"}},{"name":"_$RPT01x1","symbols":[],"postprocess":{"builtin":"null"}}],"_":[{"name":"_","symbols":[{"rule":"_$RPT01x1"}],"postprocess":{"template":"null"}}]},"names":{}},"lexer":{"start":"json","states":{"json":{"name":"json","rules":[{"when":{"regex":"\\s+","flags":""},"tag":["space"]},{"when":{"regex":"-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?\\b","flags":""},"tag":["number"]},{"when":{"regex":"\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\"","flags":""},"tag":["string"]},{"when":"{","tag":["{"]},{"when":"}","tag":["}"]},{"when":"[","tag":["["]},{"when":"]","tag":["]"]},{"when":",","tag":[","]},{"when":":","tag":[":"]},{"when":"true","tag":["true"]},{"when":"false","tag":["false"]},{"when":"null","tag":["null"]}]}}},"head":["\n\nfunction extractPair(kv, output) {\n    if(kv[0]) { output[kv[0]] = kv[1]; }\n}\n\nfunction extractObject({data}) {\n    let output = {};\n\n    extractPair(data[2], output);\n\n    for (let i in data[3]) {\n        extractPair(data[3][i][3], output);\n    }\n\n    return output;\n}\n\nfunction extractArray({data}) {\n    let output = [data[2]];\n\n    for (let i in data[3]) {\n        output.push(data[3][i][3]);\n    }\n\n    return output;\n}\n"],"body":[],"config":{},"version":"unknown"},"exportName":"GWLanguage"}